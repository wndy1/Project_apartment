hist(pr.eta,prob=T)
lines(density(pr.eta))
abline(v=mean(pr.eta),lty=2)
#post_eta
theta=rbeta(10000,a+x,b+n-x)
eta=log(theta/(1-theta))
hist(eta,prob=T)
lines(density(eta))
abline(v=mean(eta),lty=2)
#2(4) #prior_eta
par(mfrow=c(1,2))
hist(pr.eta,prob=T)
lines(density(eta))
pr.theta=rbeta(10000,a,b)
pr.eta=log(pr.theta/(1-pr.theta))
hist(pr.eta,prob=T)
lines(density(pr.eta))
#post_eta
theta=rbeta(10000,a+x,b+n-x)
abline(v=mean(pr.eta),lty=2)
eta=log(theta/(1-theta))
hist(eta,prob=T)
#2(4) #prior_eta
par(mfrow=c(1,2))
pr.theta=rbeta(10000,a,b)
pr.eta=log(pr.theta/(1-pr.theta))
hist(pr.eta,prob=T)
lines(density(pr.eta))
abline(v=mean(pr.eta),lty=2)
#post_eta
theta=rbeta(10000,a+x,b+n-x)
eta=log(theta/(1-theta))
hist(eta,prob=T)
lines(density(eta))
abline(v=mean(eta),lty=2)
mean(pr.eta)
mean(eta)
#2(4) #prior_eta
par(mfrow=c(1,2))
pr.theta=rbeta(10000,a,b)
hist(pr.eta,prob=T)
pr.eta=log(pr.theta/(1-pr.theta))
lines(density(pr.eta))
abline(v=mean(pr.eta),lty=2)
lines(density(eta),col="red")
#2(4) #prior_eta
par(mfrow=c(1,1))
pr.theta=rbeta(10000,a,b)
pr.eta=log(pr.theta/(1-pr.theta))
hist(pr.eta,prob=T)
lines(density(pr.eta))
abline(v=mean(pr.eta),lty=2)
lines(density(eta),col="red")
abline(v=mean(eta),lty=2,col="red")
#2(4) #prior_eta
par(mfrow=c(1,1))
#post_eta
theta=rbeta(10000,a+x,b+n-x)
eta=log(theta/(1-theta))
hist(eta,prob=T)
lines(density(pr.eta))
abline(v=mean(pr.eta),lty=2)
lines(density(eta),col="red")
abline(v=mean(eta),lty=2,col="red")
mean(pr.eta
mean(eta)
abline(v=mean(eta),lty=2,col="red")
ean(eta)
mean(pr.eta)
mean(eta)
#2(4) #prior_eta
par(mfrow=c(1,1))
pr.theta=rbeta(10000,a,b)
pr.eta=log(pr.theta/(1-pr.theta))
#post_eta
theta=rbeta(10000,a+x,b+n-x)
eta=log(theta/(1-theta))
hist(eta,prob=T)
abline(v=mean(pr.eta),lty=2)
lines(density(pr.eta))
lines(density(eta),col="red")
abline(v=mean(eta),lty=2,col="red")
mean(eta)
mean(pr.eta
)
hist(pr.eta,prob=T)
lines(density(pr.eta))
abline(v=mean(pr.eta),lty=2)
#post_eta
theta=rbeta(10000,a+x,b+n-x)
eta=log(theta/(1-theta))
hist(eta,prob=T)
lines(density(pr.eta))
abline(v=mean(pr.eta),lty=2)
abline(v=mean(eta),lty=2,col="red")
lines(density(eta),col="red")
qbeta(c(0.025,0.975),a+x, b+n-x)
prob=theta/sum(theta)
HPD=HPDgrid(prob,0.95)
theta=seq(0,1,length=1000)
theta = rbeta(2000,a+x,b+n-x)
prob=theta/sum(theta)
HPD=HPDgrid(prob,0.95)
HPD.grid=c(min(theta))
HPD.grid=c(min(theta[HPD$index]),max(theta[HPD$index]))
HPD.grid
HPD=HPDgrid(prob,0.95)
?HPDgrid
install.packages(HPD)
install.packages(HPDgrid)
#6
a=b=1
n1=20; x1=10; n2=20; x1=14
theta1=rbeta(10000,a+x1,b+n1-x1)
theta2=rbeta(10000,a+x2,b+n2-x2)
eta=log(theta1/theta2)
xi=log((theta1/(1-theta1))/(theta2/(1-theta2)))
par(mfrow=c(1,2))
HPD=HPDsample(eta)
?HPD
install.packages("HDInterval")
library("HDinterval")
install.packages("HDInterval")
library("HDinterval")
library("HDInterval")
HPD=HPDsample(eta)
HPD=HPDsample(eta)
library("BayesTwin")
install.packages("BayesTwin")
library("BayesTwin")
HPD=HPDsample(eta)
library("BayesTwin")
HPD=HPDsample(eta)
#2(1)
# theta~Beta(a,b)
a=11/25; b=44/25
# x|theta - B(n.theta)
n=10; x=2
# a discretization pf the possible theta values
theta = seq(0,1,length=50)
prior.theta = dbeta(theta,a,b)
#prob of data\theta(likelihood)
likhd.theta = dbinom(x,n,theta)
#joint prob of data $ theta
joint.xtheta = prior.theta*likhd.theta
#posterior of theta
post.theta = dbeta(theta, a+x, b+n-x)
#2(2)
par(mfrow=c(2,2))
plot(theta, prior.theta, type="l", sub="(a) prior:pi(theta)")
plot(theta, likhd.theta, type="l",sub="(b) likelihood : f(x|theta)")
abline(v=x/n,lty=2)
plot(theta, joint.xtheta, type="l", sub="(c) prior x likelihood : pi (theta)x f(x|theta)")
abline(v=(a+x-1)/(a+b+n-2), lty=2)
plot(theta, post.theta, type="l", sub="(d) poeterior : pi(theta|x)")
abline(v=(a+x-1)/ (a+b+n-2), lty=2)
par(mfrow=c(1,1))
plot(theta,dbeta(theta,a+x, b+n-x),type="l")
#2(2)
par(mfrow=c(2,2))
plot(theta, prior.theta, type="l", sub="(a) prior:pi(theta)")
plot(theta, likhd.theta, type="l",sub="(b) likelihood : f(x|theta)")
abline(v=x/n,lty=2)
plot(theta, joint.xtheta, type="l", sub="(c) prior x likelihood : pi (theta)x f(x|theta)")
abline(v=(a+x-1)/(a+b+n-2), lty=2)
abline(v=(a+x-1)/ (a+b+n-2), lty=2)
par(mfrow=c(1,1))
plot(theta, post.theta, type="l", sub="(d) poeterior : pi(theta|x)")
#2(2)
par(mfrow=c(2,2))
plot(theta, prior.theta, type="l", sub="(a) prior:pi(theta)")
plot(theta, likhd.theta, type="l",sub="(b) likelihood : f(x|theta)")
plot(theta, joint.xtheta, type="l", sub="(c) prior x likelihood : pi (theta)x f(x|theta)")
abline(v=(a+x-1)/(a+b+n-2), lty=2)
abline(v=x/n,lty=2)
plot(theta, post.theta, type="l", sub="(d) poeterior : pi(theta|x)")
abline(v=(a+x-1)/ (a+b+n-2), lty=2)
par(mfrow=c(1,1))
plot(theta,dbeta(theta,a+x, b+n-x),type="l")
#2(3)theta random sample
theta = rbeta(2000,a+x,b+n-x)
hist(theta, prob=T)
lines(density(theta))
mean.theta=mean(theta)
abline(v=mean.theta, lty=2)
quantile(theta,c(0.025, 0.975))
qbeta(c(0.025,0.975),a+x, b+n-x)
plot(theta,dbeta(theta,a+x, b+n-x),type="l")
#2(3)theta random sample
theta = rbeta(2000,a+x,b+n-x)
hist(theta, prob=T)
lines(density(theta))
mean.theta=mean(theta)
abline(v=mean.theta, lty=2)
quantile(theta,c(0.025, 0.975))
qbeta(c(0.025,0.975),a+x, b+n-x)
#2(4) #prior_eta
par(mfrow=c(1,1))
pr.theta=rbeta(10000,a,b)
pr.eta=log(pr.theta/(1-pr.theta))
hist(pr.eta,prob=T)
#post_eta
theta=rbeta(10000,a+x,b+n-x)
eta=log(theta/(1-theta))
hist(eta,prob=T)
lines(density(pr.eta))
abline(v=mean(pr.eta),lty=2)
lines(density(eta),col="red")
abline(v=mean(eta),lty=2,col="red")
theta=seq(0,1,length=1000)
theta = rbeta(2000,a+x,b+n-x)
prob=theta/sum(theta)
HPD=HPDgrid(prob,0.95)
qbeta(c(0.025,0.975),a+x, b+n-x)
a=b=1
n1=18 ;x1=12; n2=10; x2=8
theta1=rbeta(10000,a+x1,b+n1-x1)
theta2=rbeta(10000,a+x2,b+n2-x2)
eta=log(theta1/theta2)
xi=log((theta1/(1-theta1))/(theta2/(1-theta2)))
par(mfrow=c(1,2))
plot(density(eta),type="l",xlab="로그비",ylab="posterior density",main="")
HPD=HPDsample(eta)
abline(v=HPD,lty=2)
a=b=1
n1=18 ;x1=12; n2=10; x2=8
theta1=rbeta(10000,a+x1,b+n1-x1)
theta2=rbeta(10000,a+x2,b+n2-x2)
eta=log(theta1/theta2)
xi=log((theta1/(1-theta1))/(theta2/(1-theta2)))
HPDsmaple=function(theta,level=0.95) {
N=length(theta)
theta.sort=sort(theta)
M=ceiling(N*level)
nCI=N-M
CI.width=rep(0,nCI)
for(i in 1:nCI)CI.width[i]=theta.sort[i+M]-theta.sort[i]
index=which.min(CI.width)
HPD=c(theta.sort[index],theta.sort[index+M])
return(HPD)
}
par(mfrow=c(1,2))
HPD=HPDsample(xi)
text(mean(xi),0.06,"95% HPD interval")
abline(v=HPD,lty=2)
plot(density(xi),type="l",xlab="로그오즈비",ylab="posterior density",main="")
HPD=HPDsample(eta)
text(mean(eta),0.3,"95% HPD interval")
plot(density(eta),type="l",xlab="로그비",ylab="posterior density",main="")
abline(v=HPD,lty=2)
text(mean(xi),0.06,"95% HPD interval")
mean(eta)
plot(density(eta),type="l",xlab="로그비",ylab="posterior density",main="")
abline(v=HPD,lty=2)
text(mean(eta),0.3,"95% HPD interval")
text(mean(eta),0.73,"95% HPD interval")
text(mean(eta),0.9,"95% HPD interval")
text(mean(eta),0.3,"95% HPD interval")
HPD=HPDsample(xi)
plot(density(xi),type="l",xlab="로그오즈비",ylab="posterior density",main="")
text(mean(xi),0.06,"95% HPD interval")
rm(list=ls())
getwd()
setwd("C:\\Users\\user\\Desktop\\Project_apartment\\정동호")
rm(list=ls())
getwd()
setwd("C:\\Users\\user\\Desktop\\Project_apartment")
#dir() 파일명
dat = read.csv("단지별변수(추가).csv")
#View(dat)
#str(dat)
dat$읍면동 = as.character(dat$읍면동)
loc = dat$읍면동
#loc
dangha = grep('당하', loc)
wondang = grep('원당', loc)
bulo = grep('불로대곡' , loc)
songdo=grep('송도', loc)
eunseo=grep('운서', loc)
youngjong=grep('영종',loc)
soongee=grep('숭의',loc)
chungla=grep('청라', loc)
gumam=grep(‘검암’,loc)
gaza=grep('가좌',loc)
gajung=grep('가정',loc)
bupyeong=grep('부평',loc)
hwasu = grep('화수', loc)
songlim=grep('송림',loc)
dat[dangha,]$개발호재유무 =  1
dat[wondang,]$개발호재유무 = 1
dat[bulo,]$개발호재유무 = 1
suknam=grep('석남',loc)
dohwa=grep('도화',loc)
gumdan=grep('검단',loc)
dat[songdo,]$개발호재유무 = 1
dat[hwasu,]$개발호재유무 = 1
dat[eunseo,]$개발호재유무 = 1
dat[songlim,]$개발호재유무 = 1
dat[youngjong,]$개발호재유무 = 1
dat[dohwa,]$개발호재유무 = 1
dat[soongee,]$개발호재유무 = 1
dat[chungla,]$개발호재유무 =1
dat[gumam,]$개발호재유무=1
dat[suknam,]$개발호재유무 = 1
dat[gaza,]$개발호재유무 = 1
dat[gajung,]$개발호재유무 =1
dat[gumdan,]$개발호재유무 =1
dat[hwasu,]$개발호재유무 = 1
dat[songlim,]$개발호재유무 = 1
dat[bupyeong,]$개발호재유무 = 1
?which
dat[which(is.na(dat$개발호재유무)),]$개발호재유무<-0
write.csv(dat,'단지별변수(최종).csv')
#View(dat)
#str(dat)
dat$읍면동 = as.character(dat$읍면동)
loc = dat$읍면동
#loc
dangha = grep('당하', loc)
wondang = grep('원당', loc)
bulo = grep('불로대곡' , loc)
eunseo=grep('운서', loc)
youngjong=grep('영종',loc)
dohwa=grep('도화',loc)
gumam=grep('검암',loc)
gaza=grep('가좌',loc)
gajung=grep('가정',loc)
bupyeong=grep('부평',loc)
songlim=grep('송림',loc)
dat[dangha,]$개발호재유무 =  1
dat[songdo,]$개발호재유무 = 1
dat[hwasu,]$개발호재유무 = 1
dat[songlim,]$개발호재유무 = 1
dat[dohwa,]$개발호재유무 = 1
dat[chungla,]$개발호재유무 =1
dat[gumam,]$개발호재유무=1
dat[gajung,]$개발호재유무 =1
dat[gumdan,]$개발호재유무 =1
dat[bupyeong,]$개발호재유무 = 1
?which
dat[which(is.na(dat$개발호재유무)),]$개발호재유무<-0
write.csv(dat,'단지별변수(최종).csv')
dat[soongee,]$개발호재유무 = 1
dat[wondang,]$개발호재유무 = 1
songdo=grep('송도', loc)
dat[eunseo,]$개발호재유무 = 1
dat[youngjong,]$개발호재유무 = 1
dat[songlim,]$개발호재유무 = 1
dat[suknam,]$개발호재유무 = 1
View(dat)
hwasu = grep('화수', loc)
chungla=grep('청라', loc)
soongee=grep('숭의',loc)
suknam=grep('석남',loc)
dat[bulo,]$개발호재유무 = 1
dat[hwasu,]$개발호재유무 = 1
dat[gaza,]$개발호재유무 = 1
gumdan=grep('검단',loc)
write.csv(dat,'단지별변수(new).csv')
setwd("C:\\Users\\user\\Desktop\\Project_apartment\\하나영")
dat2<-read.csv("기준금리.csv",header=F)
hist(dat2$V3,xlab="기준금리")
x<-dat2$V1
y<-dat2$V3
plot(x,y,xlim=c(1999,2018),xlab="년도",ylab="기준금리")
#####################333333333333333333333333333333333
dat<-read.csv("단지별변수(new).csv",header=T)
################혼인건수 EDA #####################################################
setwd("C:\\Users\\user\\Desktop\\Project_apartment\\하나영\\혼인건수")
## csv file load
dat_pop = read.csv('Marriage.csv',header=T,stringsAsFactors=F)
## csv file load
dat_MA = read.csv('Marriage.csv',header=T,stringsAsFactors=F)
# 기초정보
dim(dat_MA)
# 합계 제외한 3년 평균 인구수 데이터
MA_mean = dat_pop[-a,39]
# 합계 제외한 3년 평균 인구수 데이터
MA_mean = dat_MA[-a,39]
a = which(dat_MA$행정구역 == '합계')
# 합계 제외한 3년 평균 인구수 데이터
MA_mean = dat_MA[-a,39]
################혼인건수 EDA #####################################################
setwd("C:\\Users\\user\\Desktop\\Project_apartment\\하나영\\혼인건수")
## csv file load
marr = read.csv('Marriage.csv',header=T,stringsAsFactors=F)
# 기초정보
dim(marr)
a = which(marr$행정구역 == '합계')
# 합계 제외한 3년 평균 인구수 데이터
marr_mean = dat_MA[-a,39]
# 합계 제외한 3년 평균 인구수 데이터
marr_mean = marr[-a,39]
# 평균, 분산
mean(marr_mean);sd(marr_mean)
################지가변동률  EDA #####################################################
setwd("C:\\Users\\user\\Desktop\\Project_apartment\\하나영\\지가변동률")
## csv file load
land = read.csv('landvalue.csv',header=T,stringsAsFactors=F)
## csv file load
lv = read.csv('landvalue.csv',header=T,stringsAsFactors=F)
# 기초정보
dim(lv)
a = whichr(lv$행정구역 == '합계')
# 합계 제외한 3년 평균 인구수 데이터
lv_mean = lv[-a,39]
# 평균, 분산
mean(lv_mean);sd(marr_mean)
# 평균, 분산
mean(lv_mean);sd(lv_mean)
lv_mean
# 기초정보
dim(lv)
library(xlsx)
# 라이브러리 불러오기
install.packages("xlsx")
install.packages("tseries")
library(tseries)
df <- read.csv("C:\Users\user\Desktop\Project_apartment\하나영\지가변동률\지가변동률데이터.csv", 1)
#install.packages("tseries")
library(tseries)
df <- read.csv("C:\Users\user\Desktop\Project_apartment\하나영\지가변동률\지가변동률데이터.csv", 1)
#install.packages("tseries")
library(tseries)
#install.packages("tseries")
library(tseries)
library(tseries)
df <- read.csv("C:\Users\user\Desktop\Project_apartment\하나영\지가변동률\지가변동률데이터.csv", 1)
df
## csv file load
lv = read.csv('지가변동률데이터.csv',header=T,stringsAsFactors=F)
# 기초정보
dim(lv)
################지가변동률  EDA #####################################################
setwd("C:\\Users\\user\\Desktop\\Project_apartment\\하나영\\지가변동률")
## csv file load
lv = read.csv('지가변동률데이터.csv',header=T,stringsAsFactors=F)
# 기초정보
dim(lv)
a = whichr(lv$행정구역 == '합계')
# 합계 제외한 3년 평균 지가변동률 데이터
lv_mean = lv[-a,39]
# 평균, 분산
mean(lv_mean);sd(lv_mean)
lv_mean
a = which(lv$행정구역 == '합계')
# 합계 제외한 3년 평균 지가변동률 데이터
lv_mean = lv[-a,39]
lv_mean
lv[-a,39]
## csv file load
lv = read.csv('지가변동률데이터.csv',header=T,stringsAsFactors=F)
# 기초정보
dim(lv)
a = which(lv$행정구역 == '합계')
# 합계 제외한 3년 평균 지가변동률 데이터
lv_mean = lv[-a,39]
# 평균, 분산
mean(lv_mean);sd(lv_mean)
graphics.off()
# 그래프
windows()
hist(lv_mean,breaks = 40)
boxplot(lv_mean)
hist(lv_mean,breaks = 40)
par(mfrow=c(1,2))
hist(lv_mean,breaks = 40)
boxplot(lv_mean)
# 정규확률그림
windows()
qqnorm(lv_mean)
# 기술통계량
summary(lv_mean)
# 왜도 및 첨도
# 왜도, 첨도
library(moments)
skewness(lv_mean)
kurtosis(lv_mean) # 정규분포와 비슷한 꼬리를 갖는다고 하기 힘들다
# Agostino skewness test
# 왜도가 0인지 검정
agostino.test(pop_mean)
# Agostino skewness test
# 왜도가 0인지 검정
agostino.test(lv_mean)
# 첨도가 3인지 검정
anscombe.test(lv_mean)
# 정규성 검정
shapiro.test(pop_mean)
# 정규성 검정
shapiro.test(lv_mean)
jarque.test(lv_mean)
library(nortest)
ad.test(lv_mean)
################지가변동률  EDA #####################################################
setwd("C:\\Users\\user\\Desktop\\Project_apartment\\하나영\\혼인건수")
## csv file load
marr = read.csv('혼인건수.csv',header=T,stringsAsFactors=F)
# 기초정보
dim(marr)
## csv file load
marr = read.csv('Marriage.csv',header=T,stringsAsFactors=F)
# 기초정보
dim(marr)
#  평균 혼인건수 데이터
marr_mean = lv[,1]
marr_mean
#  평균 혼인건수 데이터
marr_mean = marr[,1]
marr_mean
#  평균 혼인건수 데이터
marr_mean = marr[,2]
marr_mean
