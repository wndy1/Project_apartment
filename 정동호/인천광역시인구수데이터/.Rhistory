rm(list=ls())
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
rm(list=ls())
rm(list=ls())
### 5장 2번
# (1)
a = 2; b = 8; n = 10; x = 2
theta = seq(0,1,length=100)
prior.theta = dbeta(theta,a,b)
post.theta = dbeta(theta,a+x,n-x+b) # conjugate prior에 따른 사후분포 또한 베타분포를 따른다
# (3)
# theta의 사후 표본 생성
theta.post = seq(0,1,length = 500)
rep(1,2)
# theta의 사후 표본 생성
theta = seq(0,1,length=500)
HPDsample(theta = theta,level = 0.95)
# (3)
# theta의 사후 표본을 이용하는 HPD구간 함수
HPDsample = function(theta,level = 0.95){
N=length(theta) #표본의 수
theta.sort = sort(theta) # 오름차순 정렬
M = ceiling(N*level) # 신뢰구간을 따르는 표본의 수
nCI = N-M # 가능한 신뢰구간의 수
CI.width = rep(0,nCI) # 가능한 신뢰구간의 수만큼 벡터 생성
for(i in 1:nCI)CI.width[i] = theta.sort[i+M]-theta.sort[i] # 신뢰구간의 길이 계산
index = which.min(CI.width) # 구간 중 가장 짧은 길이의 인덱스 값
HPD = c(theta.sort[index],theta.sort[index+M]) # 해당 길이의 theta값
return(HPD)
}
HPDsample(theta = theta,level = 0.95)
# theta의 사후 표본 생성
theta = rbeta(100,a+x,n-x+b)
HPDsample(theta = theta,level = 0.95)
# theta의 사후 표본 생성
pos_theta = rbeta(100,a+x,n-x+b)
HPDsample(theta = pos_theta,level = 0.95)
# theta의 사후 표본 생성
pos_theta = rbeta(100,a+x,n-x+b)
HPDsample(theta = pos_theta,level = 0.95)
## (4)
# theta의 사전표본
pri_theta = rbeta(100,a,b)
pos_theta = rbeta(100,a+x,n-x+b)
pos_eta = log(pos_theta/(1-pos_theta))
rm(list=ls())
### 5장 2번
## (1)
a = 2; b = 8; n = 10; x = 2
## (3)
# theta의 사후 표본을 이용하는 HPD구간 함수
HPDsample = function(theta,level = 0.95){
N=length(theta) #표본의 수
theta.sort = sort(theta) # 오름차순 정렬
M = ceiling(N*level) # 신뢰구간을 따르는 표본의 수
nCI = N-M # 가능한 신뢰구간의 수
CI.width = rep(0,nCI) # 가능한 신뢰구간의 수만큼 벡터 생성
for(i in 1:nCI)CI.width[i] = theta.sort[i+M]-theta.sort[i] # 신뢰구간의 길이 계산
index = which.min(CI.width) # 구간 중 가장 짧은 길이의 인덱스 값
HPD = c(theta.sort[index],theta.sort[index+M]) # 해당 길이의 theta값
return(HPD)
}
# theta의 사후 표본 생성
set.seed(1234) # 씨드 설정
pos_theta = rbeta(100,a+x,n-x+b)
# 95%수준의 최대사후구간
HPDsample(theta = pos_theta,level = 0.95)
## (4)
# theta의 사전표본
pri_theta = rbeta(100,a,b)
pos_theta = rbeta(100,a+x,n-x+b)
# 95%수준의 최대사후구간
HPDsample(theta = pos_theta,level = 0.95)
pri_eta = log(pri_theta/(1-pri_theta))
pos_eta = log(pos_theta/(1-pos_theta))
windows()
plot(density(pos_eta),type='l',lwd = 2,lty=2,xlab="density")
lines(density(pri_eta),lwd=1, lty=1)
pri_theta = rbeta(1000,a,b)
# theta의 사후표본
pos_theta2 = rbeta(1000,a+x,n-x+b)
# 사전표본 오즈비
pri_eta = log(pri_theta/(1-pri_theta))
# 사후표본 오즈비
pos_eta = log(pos_theta2/(1-pos_theta2))
windows()
plot(density(pos_eta),type='l',lwd = 2,lty=2,xlab="density",main = "사전표본 오즈비와 사후표본 오즈비 비교")
lines(density(pri_eta),lwd=1, lty=1)
# 최대사후구간
HPD = HPDsample(theta = pos_eta,level = 0.95)
abline(v = HPD,lwd = 2, lty =3 ,col=2)
legend("topright",legend=c("사후밀도함수","사전밀도함수","최대사후구간"),lty = c(2,1,3),
col = c("black","black","red"))
windows()
plot(density(pos_eta),type='l',lwd = 2,lty=2,xlab="eta",ylab = "density",
main = "사전표본 오즈비와 사후표본 오즈비 비교")
lines(density(pri_eta),lwd=1, lty=1)
abline(v = HPD,lwd = 2, lty =3 ,col=2)
legend("topright",legend=c("사후밀도함수","사전밀도함수","최대사후구간"),lty = c(2,1,3),
col = c("black","black","red"))
### 5장 4번
n = 12; x = 3
### 5장 4번
n = 12; x = 3
# 12번의 독립적인 베루느이 시행 중 세번의 성공이 관측이라 가정
# 사전분포를 1 즉 beta(1,1)로 둔다.
a = 1; b = 1
# X_13 = 1 의 예측 확률은 결국 (a+x)/(a+b+n)이므로 사후분포의 평균 값이다.
X_13.prob = (a+x)/(a+b+n)
X_13.prob
### 5장 6번
# 그룹 1
n1 = 20; x1 = 10
# 그룹 2
n2 = 20; x2 = 14
# 사전분포는 beta(1,1)
a = 1; b = 1
# 그룹1의 사후분포는 beta(1+10,20-10+10) -> beta(11,20)이고
# 그룹2의 사후분포는 beta(1+14,20-14+1) -> beta(15,7) 이다.
# 각그룹별 사후표본 생성
theta_1 = rbeta(1000,11,20)
theta_2 = rbeta(1000,15,7)
# 로그오즈비
xi = log((theta_1/(1-theta_1)) / (theta_2/(1-theta_2)))
# 몬테칼로 방법(결국 사후표본으로 추정) 로그오즈비 추정치와 표준오차 게산
mean(xi)
# 몬테칼로 방법(결국 사후표본으로 추정) 로그오즈비 추정치와 표준오차 게산
mean(xi); sd(xi)
# 로그오즈비 사후밀도함수와 95% HPD 표시
HPD = HPDsample(theta = xi,level = 0.95)
windows()
plot(density(xi),type = 'l',lwd = 3,ylab = 'density',xlab = '로즈오즈비',
main = '로그오즈비 사후밀도함수와 HPD')
abline(v = HPD,lwd=2,lty=2,col=2)
legend("topright",legend=c("사후밀도함수","95% 최대사후구간"),lwd=c(3,2),col = c("black",2))
windows()
plot(density(xi),type = 'l',lwd = 3,ylab = 'density',xlab = '로즈오즈비',
main = '로그오즈비 사후밀도함수와 HPD')
abline(v = HPD,lwd=2,lty=2,col=2)
legend("topright",legend=c("사후밀도함수","95% 최대사후구간"),lwd=c(3,2),lty = c(1,2),col = c("black",2))
rm(list=ls())
theta_1 = seq(0.1,0.9,by=0.1)
prior_theta = 1/9
# 가능도 함수
lh_dist = (theta_1^nx)*((1-theta_1)^(5-nx))
lh_dist
# x에 대한 marginal dist
marg_dist = sum(lh_dist*prob_theta)
# posterior dist
pos_dist = (lh_dist*prob_theta)/marg_dist
pos_dist
# theta = 0.5일때 posterior dist 확률
pos_dist[5]
nx = 3
# 사전분포는 이산균일분포를 따른다
theta_1 = seq(0.1,0.9,by=0.1)
prior_theta = 1/9
# 가능도 함수
lh_dist = (theta_1^nx)*((1-theta_1)^(5-nx))
lh_dist
# x에 대한 marginal dist
marg_dist = sum(lh_dist*prob_theta)
# posterior dist
pos_dist = (lh_dist*prob_theta)/marg_dist
pos_dist
# theta = 0.5일때 posterior dist 확률
pos_dist[5]
nx = 3
# 사전분포는 이산균일분포를 따른다
theta_1 = seq(0.1,0.9,by=0.1)
prior_theta = 1/9
# 가능도 함수
lh_dist = (theta_1^nx)*((1-theta_1)^(5-nx))
lh_dist
# x에 대한 marginal dist
marg_dist = sum(lh_dist*prob_theta)
# posterior dist
pos_dist = (lh_dist*prob_theta)/marg_dist
pos_dist
# theta = 0.5일때 posterior dist 확률
pos_dist[5]
### 3장 4번
# x의 개수
# (x1,x2,x3,x4,x5) = (1,1,0,0,1)
nx = 3
# 사전분포는 이산균일분포를 따른다
theta_1 = seq(0.1,0.9,by=0.1)
prior_theta = 1/9
# 가능도 함수
lh_dist = (theta_1^nx)*((1-theta_1)^(5-nx))
lh_dist
# x에 대한 marginal dist
marg_dist = sum(lh_dist*prob_theta)
# posterior dist
pos_dist = (lh_dist*prob_theta)/marg_dist
rm(list=ls())
### 3장 4번
# x의 개수
# (x1,x2,x3,x4,x5) = (1,1,0,0,1)
nx = 3
# 사전분포는 이산균일분포를 따른다
theta_1 = seq(0.1,0.9,by=0.1)
prior_theta = 1/9
# 가능도 함수
lh_dist = (theta_1^nx)*((1-theta_1)^(5-nx))
lh_dist
# x에 대한 marginal dist
marg_dist = sum(lh_dist*prior_theta)
# posterior dist
pos_dist = (lh_dist*prior_theta)/marg_dist
pos_dist
# theta = 0.5일때 posterior dist 확률
pos_dist[5]
windows()
plot(x = theta, y = pos_dist)
plot(x = theta_1, y = pos_dist)
windows()
plot(x = theta_1,type='h', y = pos_dist)
### 3장 5번
# (1)
lh_dist[5]
# 0.03125
# (2)
marg_dist
### 5장 2번
## (1)
a = 2; b = 8; n = 10; x = 2
theta = seq(0,1,length=100)
prior.theta = dbeta(theta,a,b)
post.theta = dbeta(theta,a+x,n-x+b) # conjugate prior에 따른 사후분포 또한 베타분포를 따른다
windows()
plot(x = theta,y=post.theta,col=2,type='l')
lines(x = theta,y= prior.theta)
legend("topright",legend=c(paste("beta(",a+x,",",n-x+b,") posterior"),
paste("beta(",a,",",b,") prior")),lty=c(1,1), col=c(2,"black"))
## (3)
# theta의 사후 표본을 이용하는 HPD구간 함수
HPDsample = function(theta,level = 0.95){
N=length(theta) #표본의 수
theta.sort = sort(theta) # 오름차순 정렬
M = ceiling(N*level) # 신뢰구간을 따르는 표본의 수
nCI = N-M # 가능한 신뢰구간의 수
CI.width = rep(0,nCI) # 가능한 신뢰구간의 수만큼 벡터 생성
for(i in 1:nCI)CI.width[i] = theta.sort[i+M]-theta.sort[i] # 신뢰구간의 길이 계산
index = which.min(CI.width) # 구간 중 가장 짧은 길이의 인덱스 값
HPD = c(theta.sort[index],theta.sort[index+M]) # 해당 길이의 theta값
return(HPD)
}
# theta의 사후 표본 생성
set.seed(1234) # 씨드 설정
pos_theta = rbeta(100,a+x,n-x+b)
# 95%수준의 최대사후구간
HPDsample(theta = pos_theta,level = 0.95)
pri_theta = rbeta(1000,a,b)
# theta의 사후표본
pos_theta2 = rbeta(1000,a+x,n-x+b)
# 사전표본 오즈비
pri_eta = log(pri_theta/(1-pri_theta))
# 사후표본 오즈비
pos_eta = log(pos_theta2/(1-pos_theta2))
# 최대사후구간
HPD = HPDsample(theta = pos_eta,level = 0.95)
windows()
plot(density(pos_eta),type='l',lwd = 2,lty=2,xlab="eta",ylab = "density",
main = "사전표본 오즈비와 사후표본 오즈비 비교")
lines(density(pri_eta),lwd=1, lty=1)
abline(v = HPD,lwd = 2, lty =3 ,col=2)
legend("topright",legend=c("사후밀도함수","사전밀도함수","최대사후구간"),lty = c(2,1,3),
col = c("black","black","red"))
### 5장 4번
n = 12; x = 3
# 12번의 독립적인 베루느이 시행 중 세번의 성공이 관측이라 가정
# 사전분포를 1 즉 beta(1,1)로 둔다.
a = 1; b = 1
# posterior dist
theta = seq(0,1,length=50)
post.dist = dbeta(theta,a+x,n-x+b)
# X_13 = 1 의 예측 확률은 결국 (a+x)/(a+b+n)이므로 사후분포의 평균 값이다.
X_13.prob = (a+x)/(a+b+n)
X_13.prob
### 5장 6번
# 그룹 1
n1 = 20; x1 = 10
# 그룹 2
n2 = 20; x2 = 14
# 사전분포는 beta(1,1)
a = 1; b = 1
# 그룹1의 사후분포는 beta(1+10,20-10+10) -> beta(11,20)이고
# 그룹2의 사후분포는 beta(1+14,20-14+1) -> beta(15,7) 이다.
# 각그룹별 사후표본 생성
theta_1 = rbeta(1000,11,20)
theta_2 = rbeta(1000,15,7)
# 로그오즈비
xi = log((theta_1/(1-theta_1)) / (theta_2/(1-theta_2)))
# 몬테칼로 방법(결국 사후표본으로 추정) 로그오즈비 추정치와 표준오차 게산
mean(xi); sd(xi)
# 로그오즈비 사후밀도함수와 95% HPD 표시
HPD = HPDsample(theta = xi,level = 0.95)
windows()
plot(density(xi),type = 'l',lwd = 3,ylab = 'density',xlab = '로즈오즈비',
main = '로그오즈비 사후밀도함수와 HPD')
abline(v = HPD,lwd=2,lty=2,col=2)
legend("topright",legend=c("사후밀도함수","95% 최대사후구간"),lwd=c(3,2),lty = c(1,2),col = c("black",2))
rm(list=ls())
setwd('C:/Users/wndy4/Desktop/Project_DEMA/정동호/인천광역시인구수')
gu_name = c("계양구","남동구","동구","미추홀구",
"부평구","서구","연수구","옹진군","중구")
dat1 = read.csv("인천광역시강화군인구수(new).csv",header=T)
dat1 = cbind("구 이름" = "강화군",dat1)
for(i in gu_name){
dat = read.csv(file = paste("인천광역시",i,"인구수(new).csv",sep=""),header=T)
dat = cbind("구 이름" = i,dat)
dat1 = rbind(dat1,dat)
}
View(dat1)
# 행 이름 수정
colnames(dat1) = gsub("X","",colnames(dat1))
str(dat1)
# 통합 파일 csv로 내보내기
write.csv(dat1,file = "인천광역시 월별 구별 인구수(new).csv")
setwd('C:/Users/wndy4/Desktop/Project_DEMA/정동호/인천광역시세대수')
gu_name = c("계양구","남동구","동구","미추홀구",
"부평구","서구","연수구","옹진군","중구")
dat1 = read.csv("인천광역시강화군세대수(new).csv",header=T)
dat1 = cbind("구 이름" = "강화군",dat1)
for(i in gu_name){
dat = read.csv(file = paste("인천광역시",i,"세대수.csv",sep=""),header=T)
dat = cbind("구 이름" = i,dat)
dat1 = rbind(dat1,dat)
}
which(is.na(dat1))
rm(list=ls())
setwd('C:/Users/wndy4/Desktop/Project_DEMA/정동호/인천광역시세대수')
gu_name = c("계양구","남동구","동구","미추홀구",
"부평구","서구","연수구","옹진군","중구")
dat1 = read.csv("인천광역시강화군세대수(new).csv",header=T)
dat1 = cbind("구 이름" = "강화군",dat1)
for(i in gu_name){
dat = read.csv(file = paste("인천광역시",i,"세대수(new).csv",sep=""),header=T)
dat = cbind("구 이름" = i,dat)
dat1 = rbind(dat1,dat)
}
View(dat1)
which(is.na(dat1))
# 행 이름 수정
colnames(dat1) = gsub("X","",colnames(dat1))
str(dat1)
# 통합 파일 csv로 내보내기
write.csv(dat1,file = "인천광역시 월별 구별 세대수(new).csv")
rm(list=ls())
### 인천광역시 월별 구별 인구수(new) EDA ###
setwd('C:/Users/wndy4/Desktop/Project_DEMA/정동호/인천광역시인구수')
## Load csv file
dat = read.csv('인천광역시 월별 구별 인구수(new).csv',header=T,stringsAsFactors=F)
## Load csv file
dat = read.csv('인천광역시 월별 구별 인구수(new).csv',header=T,stringsAsFactors=F)
View(dat)
rm(list=ls())
### 인천광역시 월별 구별 인구수(new) EDA ###
## set working directory
setwd('C:/Users/wndy4/Desktop/Project_DEMA/정동호/인천광역시인구수')
## Load csv file
dat = read.csv('인천광역시 월별 구별 인구수(new).csv',header=T,stringsAsFactors=F)
View(dat)
## 열명 수정
colnames(dat) = gsub('X','',colnames(dat))
colnames(dat)
## 기초정보
dim(dat)
# x축 설정
x_dat = colnames(dat)[3:38]
## 각 구별 월별로 인구 수 변화
which(dat$행정구역=='강화군')
## 각 구별 월별로 인구 수 변화
which(dat[dat$행정구역=='강화군',])
## 각 구별 월별로 인구 수 변화
which(dat[dat$행정구역=='강화군',1])
## 각 구별 월별로 인구 수 변화
which(dat$구.이름=='강화')
## 각 구별 월별로 인구 수 변화
which(dat$구.이름=='강화군')
## 각 구별 월별로 인구 수 변화
which(dat$구.이름=='강화군' & dat$행정구역=="합계")
## 각 구별 월별로 인구 수 변화
which(dat$구.이름=='강화군' && dat$행정구역=="합계")
## 각 구별 월별로 인구 수 변화
which(dat$구.이름=='강화군' & dat$행정구역=="합계")
windows()
plot(x = x_dat,y = dat[15,3:38],type='l')
rm(list=ls())
### 인천광역시 월별 구별 인구수(new) EDA ###
## 시계열 자료
## set working directory
setwd('C:/Users/wndy4/Desktop/Project_DEMA/정동호/인천광역시인구수')
## Load csv file
dat = read.csv('인천광역시 월별 구별 인구수(new).csv',header=T,stringsAsFactors=F)
View(dat)
## 열명 수정
colnames(dat) = gsub('X','',colnames(dat))
## 기초정보
dim(dat)
# x축 설정
x_dat = colnames(dat)[3:38]
x_dat
## 각 구별 월별로 인구 수 변화
which(dat$구.이름=='강화군' & dat$행정구역=="합계")
windows()
plot(x = x_dat,y = dat[15,3:38],type='l')
windows()
plot()
lines(x = x_dat,y = dat[15,3:38],type='l')
windows()
plot(x=x_dat,type='n')
lines(x = x_dat,y = dat[15,3:38],type='l')
?plot
windows()
plot(dat[15,3:38])
windows()
plot(y=dat[15,3:38])
windows()
lines(x = x_dat,y = dat[15,3:38],type='l')
windows()
plot(x = x_dat,y = dat[15,3:38],type='l')
windows()
plot(x = x_dat,y = dat[15,3:38],type='l')
as.Date(x_dat)
as.POSIXct(x_dat,format=%Y.%m)
as.POSIXct(x_dat,format='%Y.%M')
start_dat = as.Date("2016-01")
end_dat = as.Date("2018-12")
start_dat = as.Date("2016-01",format="%y-%m")
end_dat = as.Date("2018-12",format="%y-%m")
date_set = seq(start_dat,end_dat,by="month")
date_set = seq(as.Date(start_dat),as.Date(end_dat),by="month")
start_dat = as.Date("2016-01-31",format="%y-%m")
end_dat = as.Date("2018-12-31",format="%y-%m")
date_set = seq(as.Date(start_dat),as.Date(end_dat),by="month")
start_dat = as.Date("2016-01-31")
end_dat = as.Date("2018-12-31")
date_set = seq(as.Date(start_dat),as.Date(end_dat),by="month")
date_set
start_dat = as.Date("2016-01-01")
end_dat = as.Date("2018-12-01")
date_set = seq(as.Date(start_dat),as.Date(end_dat),by="month")
date_set
length(date_set)
as.Date(date_set,format="%y-%m")
start_dat = as.Date("2016-01",format='%y-%m')
end_dat = as.Date("2018-12",format='%y-%m')
date_set = seq(as.Date(start_dat),as.Date(end_dat),by="month",format='%y-%m')
as.Date(x_dat,format='%y-%m')
start_dat = as.Date("2016-01-01")
end_dat = as.Date("2018-12-01")
date_set = seq(as.Date(start_dat),as.Date(end_dat),by="month")
date_set
substr(date_set,1,7)
x_dat=substr(date_set,1,7)
windows()
plot(x = x_dat,y = dat[15,3:38],type='l')
x_dat
str(x_dat)
as.vector(x_dat)
windows()
plot(x = as.vector(x_dat),y = dat[15,3:38],type='l')
colnames(dat)[3:38] = x_dat
# x축 설정
x_date = colnames(dat)[3:38]
windows()
plot(x = x_date,y = dat[15,3:38],type='l')
windows()
plot(x = 1:36,y = dat[15,3:38],type='l')
windows()
plot(x = as.Date(x_date),y = dat[15,3:38],type='l')
class(date_set)
class(x_date)
windows()
plot(x = as.Date(date_set),y = dat[15,3:38],type='l')
date_set
windows()
plot(x = as.Date(date_set),y = dat[15,3:38],type='l',xlim = 1:36)
windows()
plot(x = as.Date(date_set),y = dat[15,3:38],type='l',xlim = 36)
?xlim
x_dat=substr(date_set,1,7)
windows()
plot(x = as.Date(x_dat),y = dat[15,3:38],type='l')
windows()
plot(x = x_dat,y = dat[15,3:38],type='l')
class(x_dat)
windows()
plot(x = as.Date(date_set),y = dat[15,3:38],type='l',xlim = (1,36))
windows()
plot(x = as.Date(date_set),y = dat[15,3:38],type='l',xlim = c(1:36))
windows()
plot(x = as.Date(date_set),y = dat[15,3:38],type='l',xlim(1,36))
?Ts
?ts
ts(data = dat[15,3:38],start = c(2016,1),frequency = 36)
dat1 = ts(data = dat[15,3:38],start = c(2016,1),frequency = 36)
windows()
plot(dat1)
View(dat1)
class(dat1)
str(dat1)
dat1[1]
windows()
plot(dat1)
### 인천광역시 월별 구별 인구수(new) EDA ###
## 시계열 자료
library(ggplot2)
windows()
ggplot(dat1)
