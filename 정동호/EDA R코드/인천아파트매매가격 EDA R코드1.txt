### 인천광역시 아파트 매매가격(y값) EDA ###
setwd('C:/Users/wndy4/Desktop/Project_DEMA')
rm(list=ls())
library(psych)
library(gmodels)
library(moments)

## load csv
dat = read.csv('단지별변수(new).csv',header=T,stringsAsFactors=F)
str(dat)
price = dat$평균매매가
price
summary(price)
length(price)
## 그래프
# 히스토그램
hist.price = hist(price)

windows()
hist(price,freq = F)
lines(x = hist.price$mids,y = hist.price$density,type='b',pch=1)
# 히스토그램의 모양이 단봉형이고 약간 왼쪽으로 쏠려있는 모양을 볼 수 있다.(skewed right)

# density plot
d.price = density(price)

x11()
plot(d.price,main="인천광역시 아파트 평균 매매가 분포",xlab="")
# 

# boxplot
windows()
boxplot(price,main = '인천아파트 평균 매매가격')
# outlier 가 많은 것처럼 보인다.
box.price = boxplot(price)
length(box.price$out) # outlier 개수가 129개

## 기술통계량
# 위치측도
mean(price)
median(price)
# 평균>중앙값 skewed right임을 알 수 있다.

# 산포측도
sd(price)
range(price)
quantile(price)
cv = sd(price)/mean(price)
cv

# 모양측도(왜도,첨도)
skewness(price) # 1.31 # 왜도
kurtosis(price) # 5.88 # 첨도
# 왜도가 0인지 아닌지 검정
agostino.test(price) # p-value가 유의수준 0.05보다 크면 대립가설 기각(왜도가 0이라 할 수 있다.)
# p-value가 매우 작으므로 유의수준 0.05에서 왜도가 0이라 하기 힘들다.

# 첨도가 3인지 아닌지 검정
anscombe.test(price) # p-value가 유의수준 0.05보다 크면 귀무가설 기각X(첨도가 3이라 할 수 있다.)
# p-value가 매우 작으므로 유의수준 0.05에서 첨도가 3이라고 하기 힘들다.
## 정규확률그림
windows()
qqnorm(price)
qqline(price)
# 모양으로 보아 skewed right이다.
qq.price = qqnorm(price)
# 직접 정규확률그림 그려보기
# 자료 오름차순 정렬
sort.price = sort(price)
sort.price
length(sort.price)
# 표준정규분포에서 각각 1/(n+1) 구간의 확률을 갖는 값을 구하기
norm.price = c()
?qnorm
for(i in 1:length(sort.price)){
  norm.price[i] = qnorm((i/(length(sort.price)+1)),0,1)
}
norm.price
# 정규확률그림
windows()
plot(sort.price ~ norm.price, type='p')

# 정규성 검정
# kolmogorov smirnov test
library(nortest)
lillie.test(price)
# p-value가 매우 작으므로 유의수준 0.05에서 귀무가설 기각
# 정규분포를 따르지 않다고 할 수 있다

# Anderson-Darling test
ad.test(price)
# p-value가 매우 작으므로 유의수준 0.05에서 귀무가설 기각(정규분포를 따르지 않다고 할 수 있다.)

# shapiro-Wilk test
shapiro.test(price)
# p-value가 매우 작으므로 유의수준 0.05에서 귀무가설 기각(정규분포를 따르지 않다고 할 수 있다.)

# 결론 : 모든 정규성 검정에서 귀무가설을 기각하므로 표본이 정규분포로부터 나왔다고 하기 힘들다.

## 변수변환
# log, sqrt transformation
log.price = log(price)
sqrt.price = sqrt(price)

# 로그변환
# 히스토그램
windows()
par(mfrow=c(2,2))
hist(price)
hist(log.price, main = "로그변환")
boxplot(price)
boxplot(log.price,main = "로그변환")
# 로그 변환 이후 분포의 모양이 가운데로 몰려있음을 확인할 수 있다.

# 기술통계량
mean(log.price);median(log.price)
# 평균과 중앙값이 서로 비슷하므로 대칭형이라 추론할 수 있다.
sd(log.price)
quantile(log.price)
# 왜도, 첨도
skewness(log.price)
kurtosis(log.price)
# 왜도 0인지 아닌지 검정
agostino.test(log.price)
# p-value가 유의수준 0.05보다 매우 작으므로 왜도가 0이라하기 힘들다
# 첨도 3인지 아닌지 검정
anscombe.test(log.price)
# p-value가 유의수준 0.05보다 매우 작으므로 첨도가 3이라고 하기 힘들다.

# 정규확률그림
windows()
qqnorm(log.price)
qqline(log.price)
# 로그변환 후 그림상으로는 정규분포를 따른다고 추론은 할 수 있다. 정규성 검정을 통해 정확히 파악해보자
# 정규성 검정
lillie.test(log.price)
# p-value가 유의수준 0.05보다 매우 작으므로 정규분포를 따른다고 하기 힘들다
ad.test(log.price)
# p-value가 유의수준 0.05보다 매우 작으므로 정규분포를 따른다고 하기 힘들다
shapiro.test(log.price)
# p-value가 유의수준 0.05보다 매우 작으므로 정규분포를 따른다고 하기 힘들다

# 결론 : 변환 전보다는 분포의 모양이 대칭형이지만, 여전히 정규분포를 따른다고 하기 힘들다.

# sqrt 변환
# 히스토그램 boxplot
windows()
par(mfrow=c(2,2))
hist(price)
hist(sqrt.price,main = "sqrt 변환")
boxplot(price)
boxplot(sqrt.price, main = 'sqrt 변환')
# 단순히 그래프상으로는 쏠림정도가 완화됬는지 확인하기 힘들다

# 기술통계량
mean(sqrt.price);median(sqrt.price)
sd(sqrt.price)

# 왜도, 첨도
skewness(sqrt.price)
kurtosis(sqrt.price)

# 왜도가 0인지에 대한 검정
agostino.test(sqrt.price)
# p-value 유의수준 0.05보다 작으므로 왜도가 0이라 하기 힘들다.

# 첨도가 3인지에 대한 검정
anscombe.test(sqrt.price)
# p_value가 유의수준 0.05보다 작으므로 첨도가 3이라 하기 힘들다.

# 정규확률그림
windows()
qqnorm(sqrt.price)
qqline(sqrt.price,col=2)
# skewed right, 왼쪽으로 쏠려 있다는 것을 유추할 수 있다.

# 정규성 검정
lillie.test(sqrt.price)
ad.test(sqrt.price)
shapiro.test(sqrt.price)
# p-value가 0.05보다 작으므로 정규분포라 하기 힘들다.

## 가설검정 ##
# 표본평균
mean(price)
# 가설검정
# H0 : mu = 250 vs. H1 : mu != 250
# 검정통계량 계산
# 정규성 검정을 통해 표본이 정규분포로 나왔다고 보기 힘들기 때문에 t분포 사용
mu = 250
x_bar = mean(price)
s = sd(price)
n = length(price)
# 검정 통계량
t_val = (x_bar - mu)/(s/sqrt(n))
# 유의수준
alpha = 0.05

# p_value 구하기

p_value = 2*pt(t_val,df=n-1)
p_value
# p_value가 유의수준 0.05보다 크므로 귀무가설을 기각할 수 없다. 
# 즉, 모수가 250이라 할 수 있다.

# (100-5)% 신뢰구간
talpha = qt(alpha/2,n-1,lower.tail = F)
talpha

upper.ci = x_bar + talpha * (s/sqrt(n))
lower.ci = x_bar - talpha*(s/sqrt(n))
c(upper.ci,lower.ci)
# 95% 신뢰구간에 mu가 포함되므로 mu = 250이라 할 수 있다.

# 기각역 구하기
t_val>qt(alpha/2,n-1)

# t.test 사용
t.test(price,mu=250)

# 가설검정 단측검정 case
# H0 : mu =250 vs. H1 : mu>250
# 검정통계량
t_val
# p_value 구하기
p_value = pt(abs(t_val),n-1,lower.tail = F)
p_value
# p_value가 0.05보다 크므로 귀무가설을 기각할 수 없다.