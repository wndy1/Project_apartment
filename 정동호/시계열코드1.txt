### 인천광역시 월별 구별 인구수(new) EDA ###
## 시계열 자료
rm(list=ls())
## set working directory
setwd('C:/Users/wndy4/Desktop/Project_DEMA/정동호/인천광역시인구수데이터')

## Load csv file
dat = read.csv('인천광역시 월별 구별 인구수(new).csv',header=T,stringsAsFactors=F)
View(dat)
## 열명 수정
colnames(dat) = gsub('X','',colnames(dat))
colnames(dat)
## 기초정보
dim(dat)
## 각 구별 월별로 인구 수 변화
# 구군 이름
gu_name = unique(dat$구.이름)
gu_name
## 각 구별 합계 행 위치 찾기
gu_sumrow = c()
for (i in 1:length(gu_name)){
  gu_sumrow[i] = which(dat$구.이름==gu_name[i] & dat$행정구역=="합계")
}
gu_sumrow

## 구군별 합계 시계열 데이터 매트릭스
# data에 transpose 하는 이유는 plot 에서 행 벡터 인식 X 열 벡터 인식 O
gu_dat = t(dat[gu_sumrow,3:38])
incheon_sum = apply(gu_dat, 1,sum)
gu_dat = cbind(gu_dat,incheon_sum)
ts_gu_mat = ts(data = gu_dat,start = c(2016),frequency = 36)
min(ts_gu_mat);max(ts_gu_mat[,1:10])
## 구군별 시계열 그래프 하나의 창으로 모아보기
windows()
par(mfrow=c(2,5))
for(i in 1:length(gu_name)){
  dates = seq(as.Date("2016-01-01"), by = "month", along = ts_gu_mat[,i]) # 날짜 201601~201812 생    
  tsp = attributes(ts_gu_mat[,i])$tsp
  plot(ts_gu_mat[,i],xaxt = "n",main = paste(gu_name[i],' 인구수 변화',sep=''),
       ylab = paste(gu_name[i],' 인구수',sep=''),xlab = '201601 ~ 201812')
  axis(1, at = seq(tsp[1], tsp[2], along = ts_gu_mat[,i]), labels = format(dates,"%Y%m"))
}
## 구군별 시계열 그래프 개별로 보기
for(i in 1:length(gu_name)){
  dates = seq(as.Date("2016-01-01"), by = "month", along = ts_gu_mat[,i]) # 날짜 201601~201812 생    
  tsp = attributes(ts_gu_mat[,i])$tsp
  windows()
  plot(ts_gu_mat[,i],xaxt = "n",main = paste(gu_name[i],' 인구수 변화',sep=''),
       ylab = paste(gu_name[i],' 인구수',sep=''),xlab = '201601 ~ 201812')
  axis(1, at = seq(tsp[1], tsp[2], along = ts_gu_mat[,i]), labels = format(dates,"%Y%m"))
}
## 인천광역시 전체 인구수 그래프
dates = seq(as.Date("2016-01-01"), by = "month", along = ts_gu_mat[,11]) # 날짜 201601~201812 생    
tsp = attributes(ts_gu_mat[,11])$tsp
windows()
plot(ts_gu_mat[,11],xaxt = "n",main = paste('인천광역시',' 인구수 변화',sep=''),
     ylab = paste('인천광역시',' 인구수',sep=''),xlab = '201601 ~ 201812')
axis(1, at = seq(tsp[1], tsp[2], along = ts_gu_mat[,11]), labels = format(dates,"%Y%m"))
graphics.off()

## 인천광역시 전체 인구수 시계열 분석 
# 참고사이트 : https://otexts.com/fppkr/stationarity.html
library(tseries)
library(forecast)
ts_gu_mat = ts(data = gu_dat,start = c(2016,1),frequency = 12)
?ts
incheonpop = ts_gu_mat[,11]
incheonpop
windows()
plot(incheonpop,ylab="",main="인천광역시 전체 인구수 시계열 그래프")

# decomposition
x11()
plot(stl(incheonpop,s.window = 'per'),main="계절성, 트렌드, 주기 파악")
# trend가 존재하고, 계절성 존재 -> 정상성 판단 후 차분 or 변수 변환 고려

# 정상성 판단
# ACF, PACF 이용
x11()
acf(incheonpop,36)
# 지수적 감소는 보이지 않음.
x11()
pacf(incheonpop,36)
# Cut off after lag 1 -> AR(1)의 가능성 존재?
# 정상성 검정
adf.test(incheonpop,alternative = "stationary",k=0)
# p-value가 0.4555이므로 유의확률 0.05 수준에서 귀무가설을 기각할 수 없다. -> 비정상성이라 할 수 있다.

# 1차 차분 진행
df.incheon = diff(incheonpop)

x11()
plot(df.incheon)

# 1차 차분에 대한 정상성 판단
x11()
acf(df.incheon,36,main="ACF")
# ACF가 지수적으로 감소하고 0에 가깝다고 볼 수 있다.
x11()
pacf(df.incheon,36,main="PACF")
# PACF가 거의 0에 가깝다고 할 수 있다.

# 1차 차분에 대한 정상성 검정
adf.test(df.incheon,alternative = "stationary",k=0)
# 단위근 검정에서 p-value가 0.01보다 작으므로 유의수준 0.05에서 귀무가설을 기각할 수 있다.
# 1차 차분에 대해 정상성이 있다고 볼 수 있다.

# ARIMA 모형
# AR(p)와 MA(q)와 ,d 세가지 파라미터 찾아야한다.
auto.arima(diff(incheonpop))

x11()
tsdiag(auto.arima(diff(incheonpop)))
# 세 그래프가 모두 뚜렷한 패턴(증가하거나 감소하거나 등)이 없어서 가정으 만족

# ARIMA 만들기
fit = arima(incheonpop,c(2,1,0))
?arima
fit$

# 예측
incheon.fcast = forecast

## 인천광역시 동별 시계열 그래프
## 구군별로 읍면동 시계열 데이터 매트릭스 생성하는 함수
dong_list = function(Gu_name){
  dong_row = which(dat$구.이름==Gu_name)
  dong_dat = t(dat[dong_row,3:38])
  ts_dong_mat = ts(data = dong_dat,start = c(2016),frequency = 36)
  return(ts_dong_mat)
}

gu_name
for (i in 1:length(gu_name)){
  a = dong_list(gu_name[i])
  dong_name = dat[dat$구.이름==gu_name[i],2]
  windows()
  par(mfrow=c(3,ceiling(ncol(a)/3)))  # 그래프 구역 갯수 설정을 위한 숫자
  for(j in 1:ncol(a)){
    dates = seq(as.Date("2016-01-01"), by = "month", along = a[,j]) # 날짜 201601~201812 생    
    tsp = attributes(a[,j])$tsp
    plot(a[,j],xaxt = "n",main = paste(gu_name[i],' ',dong_name[j],' 인구수 변화',sep=''),
         ylab = paste(gu_name[i],' ',dong_name[j],' 인구수',sep=''),xlab = '201601 ~ 201812')
    axis(1, at = seq(tsp[1], tsp[2], along = a[,j]), labels = format(dates,"%Y%m"))
  } 
}
graphics.off()
