# 1차 전처리는 파이썬을 통해서 16년 1월 ~ 18년 12월까지 데이터를
# 구별로 모아서 파일 형성
# 2차는 R로 추가적인 전처리 과정 및 결측값 처리 진행
getwd()
setwd("C:/Users/wndy4/Desktop/데이터마이닝 팀플/변수/월별인천인구수")
# 인천 인구수 csv 파일 불러오기
a = read.csv("./인천광역시 강화군 세대수.csv",header=T,stringsAsFactors = F)
View(a)
# 컬럼명 수정
colnames(a) = gsub("X","",colnames(a))
colnames(a)[1] = "행정구역"
colnames(a)
# 행정구역 행 수정
a$행정구역 = gsub(" ","",a$행정구역)
a$행정구역

# 행정기관 행 삭제
a = a[-which(a[,1] == "행정기관"),]

a_row = dim(a)[1]


# 합계 행이 위에 있다면 맨 아래로 이동
a[a_row+1,] = a[1,]
a = a[-1,]
# character -> numeric 형으로 변환
for (i in 1:36) {
  a[,i+1] = as.numeric(a[,i+1])
}

str(a)

### 검단 1동 -> 검단동
range(which(is.na(a[13,])))
dim(a)
a[8,32:37] = a[13,32:37]
### 검단 2동 -> 불로대곡동
range(which(is.na(a[16,])))
a[9,32:37] = a[16,32:37]
### 검단 3동 -> 원당동
range(which(is.na(a[10,])))
a[10,32:37] = a[23,32:37]
### 검단4동 -> 당하동
range(which(is.na(a[11,])))
a[11,32:37] = a[15,32:37]
### 검단5동 -> 오류왕길동
range(which(is.na(a[12,])))
a[12,32:37] = a[22,32:37]
### 불필요한 검단동, 불로대곡동, 원당동, 당하동, 오류왕길동
### 삭제후 행 이름 변환
a = a[c(-13,-15,-16,-22,-23),]
a$행정구역
a[a$행정구역=="검단1동",1] = "검단동"
a[a$행정구역=="검단2동",1] = "불로대곡동"
a[a$행정구역=="검단3동",1] = "원당동"
a[a$행정구역=="검단4동",1] = "당하동"
a[a$행정구역=="검단5동",1] = "오류왕길동"

### 청라3동 결측값 처리
### 청라2동과 청라3동 비율 값 구해서 갑 입력 
x = 11358;y=5374
k = x/(x+y)
k
dim(a)
range(which(is.na(a[a$행정구역 =="청라3동",])))
for (i in 2:7){
  a[a$행정구역 =="청라2동",i] = ceiling(k*a[a$행정구역 =="청라2동",i])
  a[a$행정구역 =="청라3동",i] = floor((1-k)*a[a$행정구역 =="청라2동",i])
}
### 다시 행 변수 설정
a_row = dim(a)[1]

# 결측값 넣은 것이 총합과 맞는 지 비교
fal =c()
for(i in 2:36){
  print(i)
  print(sum(a[1:a_row-1,i]) == a[a_row,i])
  ch = sum(a[1:a_row-1,i]) == a[a_row,i]
  if (ch == FALSE) {
    fal[i] = i
  }
}
fal
### 합계 차이 비교
for(i in 2:7){
  print(sum(a[1:a_row-1,i]) < a[a_row,i])
}
### 합계의 차이를 청라3동에 더해주기
for(i in 2:7){
  a[a_row-1,i] = a[a_row-1,i]  + a[a_row,i] - sum(a[1:a_row-1,i])
}
###


######### 결측값 처리 ##########
# 17.07,08,09 합계 값 넣기
a[a_row,which(a[a_row,]==0)]
a[a_row,which(a[a_row,]==0)] = c(31443,31530,31607)

### 남동구 장수서창동 -> 서창2동 분화
x = 13767;y=7730
k = x/(x+y)

for (i in 2:35){
  a[19,i] = ceiling(k*a[20,i])
  a[20,i] = floor((1-k)*a[20,i])
}
###

# 17년 7월 ~ 9월 결측값 처리
# 합계에서 동별로 비율을 구해서 유추
# 17년 10월 & 17년 6월 기준으로 비율 구하기
Ratio = c()
for(i in 1:a_row-1){
  Ratio[i] = a$`2017.10`[i]/a$`2017.10`[a_row]
}
Ratio
a$`2017.7`[1:6] = ceiling(a$`2017.7`[a_row]*Ratio[1:6])
a$`2017.7`[7:a_row-1] = floor(a$`2017.7`[a_row]*Ratio[7:a_row-1])

a$`2017.8`[1:6] = ceiling(a$`2017.8`[a_row]*Ratio[1:6])
a$`2017.8`[7:a_row-1] = floor(a$`2017.8`[a_row]*Ratio[7:a_row-1])

a$`2017.9`[1:6] = ceiling(a$`2017.9`[a_row]*Ratio[1:6])
a$`2017.9`[7:a_row-1] = floor(a$`2017.9`[a_row]*Ratio[7:a_row-1])

## 미추홀구 경우18년 6월 데이터도 누락 되어있었다.
a$`2018.6`[1:6] = ceiling(a$`2018.6`[a_row]*Ratio[1:6])
a$`2018.6`[7:a_row-1] = floor(a$`2018.6`[a_row]*Ratio[7:a_row-1])
##
# 결측값 넣은 것이 총합과 맞는 지 비교
for(i in 2:36){
  print(i)
  print(sum(a[1:a_row-1,i]) == a[a_row,i])
}

# false -> 20, 21, 22
# 합계 안맞는 것은 조정
a[,20]
sum(a[1:a_row-1,20])
a[1,20] = a[1,20] +1

a[,21]
sum(a[1:a_row-1,21])
a[1,21] = a[1,21] +2

a[,22]
sum(a[1:a_row-1,22])
a[1,22] = a[1,22] +2
# 미추홀구 경우
a[,31]
sum(a[1:a_row-1,31])
a[1,31] = a[1,31] +8

####### 결측값 처리 끝 ########
# csv파일로 저장
write.csv(a,file = "./인천광역시 세대수/인천광역시강화군세대수.csv")
?write.csv
